---
- name: is vm ?
  shell: 'sysctl -n hw.vendor | grep -q "QEMU"'
  register: vm_status
  changed_when: False
  failed_when: False

- name: register is_vm
  set_fact:
    is_vm: True
  when: vm_status.rc == 0

- name: pkgs OpenBSD
  openbsd_pkg:
    name: '{{item}}'
    state: present
  environment:
    PKG_PATH: "http://ftp.fr.openbsd.org/pub/OpenBSD/{{ansible_distribution_release}}/packages/{{ansible_architecture}}/"
  with_items:
    - git
    - rsync
    - vim--no_x11
    - mtr--
    - zsh
    - openldap-client
    - munin-node
    - '{{ host_pkgs }}'
    - '{{ role_pkgs }}'
    - '{{ pkgs }}'
  tags: baseconf, pkg

# config ldap globale
- name: openldap config dir
  file:
    path: '{{ldap_etcdir}}'
    state: directory
    owner: 0
    group: 0
    mode: '0755'
  when: ldap_base != ""
  tags: ldapconf

# mailrelay
- name: mailrelay
  lineinfile:
    dest: /etc/mail/smtpd.conf
    line: 'accept from local for any relay via {{mailrelay}}'
    regexp: '^accept .*for any relay'
  notify: restart smtpd
  when: mailrelay != '' and not is_mailrelay
  tags: mailclient

# timezone
- name: timezone
  file:
    src: '/usr/share/zoneinfo/{{ host_timezone }}'
    dest: '/etc/localtime'
    state: link
    force: yes
  tags: timezone

- block:
  - name: syslog central
    lineinfile:
      dest: /etc/syslog.conf
      insertbefore: '^!'
      regexp: '^[^#]+@.*'
      line: '*.notice;cron,ftp,kern,lpr,mail,user.none	@{{ syslog_server }}'
    notify: restart BSD syslogd
  - name: syslog central / auth
    lineinfile:
      dest: /etc/syslog.conf
      insertbefore: '^!'
      regexp: '^auth.*@.*'
      line: 'auth.info;authpriv.info					@{{ syslog_auth_server | default(syslog_server) }}'
    notify: restart BSD syslogd
  when: syslog_server != '' and not is_syslogd
  tags: syslog

# ocsinventory
- name: check
  stat: /usr/local/bin/ocsinventory-agent
  register: ocsinstalled

- block:
  - name: dependencies
    openbsd_pkg:
      name: '{{ item }}'
      state: present
    with_items:
      - nmap
#      - dmidecode
      - pciutils
      - p5-libwww
      - p5-XML-Simple
      - p5-Net-IP
      - p5-Proc-Daemon
      - p5-LWP-Protocol-https
  - name: get
    get_url:
      url: 'https://github.com/OCSInventory-NG/UnixAgent/releases/download/2.3/Ocsinventory-Unix-Agent-2.3.tar.gz'
      dest: /root/Ocsinventory-Unix-Agent-2.3.tar.gz
  - name: extract
    unarchive:
      remote_src: yes
      dest: /root
      src: /root/Ocsinventory-Unix-Agent-2.3.tar.gz
  - name: build
    shell: 'PERL_AUTOINSTALL=1 perl Makefile.PL && make && echo "n" | make install'
    args:
      chdir: /root/Ocsinventory-Unix-Agent-2.3
      creates: /usr/local/bin/ocsinventory-agent
  when: not ocsinstalled.stat.exists and ocsinventory_server != "" and not is_vm

# config ocs
block:
  - name: mkdir
    file:
      dest: /etc/ocsinventory
      state: directory
  - name: config ocsinventory
    copy:
      dest: /etc/ocsinventory/ocsinventory-agent.cfg
      content: |
        server={{ ocsinventory_server }}
        {% if ocsinventory_tag %}tag={{ ocsinventory_tag }}{%endif %}
        nosoftware=on
  - name: run ocsinventory-agent
    shell: '/usr/local/bin/ocsinventory-agent'
    changed_when: False
  when: ocsinventory_server != "" and not is_vm

# NUT
- block:
  - name: install NUT
    openbsd_pkg:
      name: nut
      state: present
    tags: pkg,ups
  - name: nut.conf
    copy:
      content: |
        MODE={{ nut_mode }}
      dest: /etc/nut/nut.conf
    tags: conf,ups
  - name: upsmon.conf
    template:
      src: upsmon.conf.j2
      dest: /etc/nut/upsmon.conf
      mode: '0640'
      group: _ups
    tags: conf,ups
  - name: service upsmon
    service:
      name: nut_upsmon
      state: started
      enabled: True
    tags: ups
  when: nut_monitor != "" and not is_vm
