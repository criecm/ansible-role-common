---
# taches communes ECM
- include_vars: '{{ includefile }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'
      skip: True
  loop_control:
    loop_var: includefile
  tags: vars

- include_tasks: '{{ includefile }}'
  with_first_found:
    - files:
        - '{{ ansible_os_family }}.yml'
      skip: True
  loop_control:
    loop_var: includefile
  when: do_sysadm
  tags: vars

- name: resolv.conf
  template:
    src: resolv.conf.j2
    dest: /etc/resolv.conf
    owner: root
    mode: '0644'
  tags: resolver
  when: not is_jail and do_sysadm

# pkgs
- name: install packages
  include_tasks: 'pkgs-{{ ansible_os_family }}.yml'
  tags: pkg
  when: do_sysadm

# ntp
- name: config ntpd
  include_tasks: ntpd.yml
  when: 'ntp_servers or ntp_pools and not is_jail and not is_vm and do_sysadm'
  tags: ntp

# x509
- name: Installe CA local
  copy:
    src: '{{x509_ca_file}}'
    dest: '{{x509_ca_path}}'
    owner: root
    group: 0
    mode: '0644'
  when: x509_ca_file != '' and do_sysadm
  tags: x509

# syslog
- name: syslog client
  include_tasks: 'syslog-{{ ansible_os_family }}.yml'
  when: syslog_server != '' and not is_syslogd and do_sysadm
  tags: syslog

# snmp (missing Debian and OpenBSD)
- name: snmp server
  include_tasks: 'snmpd-{{ ansible_os_family }}.yml'
  when: not is_jail and not is_vm and do_sysadm and do_snmp
  tags: snmpd

# munin config
- name: munin
  include_role:
    name: criecm.munin
  when: munin_host != '' and munin_servers | count() > 0 and not is_jail and do_sysadm
  tags: munin

# ldap TLS client config
- name: ldap client
  include_tasks: ldap.yml
  when: ldap_base != "" and ldap_uri != "" and x509_ca_path != "" and do_sysadm
  tags: ldap

# sshd config and keys
# root ssh access and authorized_keys
- include_tasks: sshd.yml
  when: do_sysadm
  tags: sshd

# root shell config
- name: root shell
  include_tasks: rootshell.yml
  when: 'root_shell != "" and do_sysadm'
  tags: rootshell

# gits helper
- name: gits
  include_tasks: gits.yml
  tags: gits
  when: 'gits | union(host_gits) | union(role_gits) | count() > 0 and do_sysadm'

# crons
- name: crons
  cron: '{{ cron }}'
  with_items: '{{ crons | union(host_crons) | union(role_crons) }}'
  loop_control:
    loop_var: cron
  tags: crons
  when: crons | union(host_crons) | union(role_crons) | count > 0 and do_sysadm

# mailrelay
- name: mailrelay
  include_tasks: 'mailrelay-{{ ansible_os_family }}.yml'
  when: 'mailrelay != "" and not is_mailrelay and do_sysadm'
  tags: mailrelay

- name: alias mail root
  lineinfile:
    dest: "{{mailaliases}}"
    line: "root: {{rootmailto}}"
    regexp: '^root:'
  notify: newaliases
  when: rootmailto != '' and do_sysadm
  tags: mailclient

- name: export mailrelay var
  set_fact:
    mailrelay: '{{ mailrelay }}'
  tags: vars,mailrelay

# NUT (Network Ups Tools)
- name: Network Ups Tools
  include_tasks: 'mailrelay-{{ ansible_os_family }}.yml'
  when: 'nut_monitor != "" and not is_vm and not is_jail and do_sysadm'
  tags: nut

# ocsinventory agent
- name: ocsinventory agent
  include_tasks: 'ocsinventory-{{ ansible_os_family }}.yml'
  when: ocsinventory_server != "" and not is_jail and not is_vm and do_sysadm
  tags: ocsinventory
